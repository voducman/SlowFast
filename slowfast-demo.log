0it [00:00, ?it/s][06/19 11:03:24][INFO] demo_net.py:  39: Run demo with config:
[06/19 11:03:24][INFO] demo_net.py:  40: AUG:
  AA_TYPE: rand-m9-mstd0.5-inc1
  COLOR_JITTER: 0.4
  ENABLE: False
  INTERPOLATION: bicubic
  NUM_SAMPLE: 1
  RE_COUNT: 1
  RE_MODE: pixel
  RE_PROB: 0.25
  RE_SPLIT: False
AVA:
  ANNOTATION_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  BGR: False
  DETECTION_SCORE_THRESH: 0.9
  EXCLUSION_FILE: ava_val_excluded_timestamps_v2.2.csv
  FRAME_DIR: /mnt/fair-flash3-east/ava_trainval_frames.img/
  FRAME_LIST_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  FULL_TEST_ON_VAL: False
  GROUNDTRUTH_FILE: ava_val_v2.2.csv
  IMG_PROC_BACKEND: cv2
  LABEL_MAP_FILE: ava_action_list_v2.2_for_activitynet_2019.pbtxt
  TEST_FORCE_FLIP: False
  TEST_LISTS: ['val.csv']
  TEST_PREDICT_BOX_LISTS: ['ava_val_predicted_boxes.csv']
  TRAIN_GT_BOX_LISTS: ['ava_train_v2.2.csv']
  TRAIN_LISTS: ['train.csv']
  TRAIN_PCA_JITTER_ONLY: True
  TRAIN_PREDICT_BOX_LISTS: []
  TRAIN_USE_COLOR_AUGMENTATION: False
BENCHMARK:
  LOG_PERIOD: 100
  NUM_EPOCHS: 5
  SHUFFLE: True
BN:
  NORM_TYPE: batchnorm
  NUM_BATCHES_PRECISE: 200
  NUM_SPLITS: 1
  NUM_SYNC_DEVICES: 1
  USE_PRECISE_STATS: True
  WEIGHT_DECAY: 0.0
DATA:
  DECODING_BACKEND: pyav
  ENSEMBLE_METHOD: sum
  INPUT_CHANNEL_NUM: [3, 3]
  INV_UNIFORM_SAMPLE: False
  MEAN: [0.45, 0.45, 0.45]
  MULTI_LABEL: False
  NUM_FRAMES: 32
  PATH_LABEL_SEPARATOR:  
  PATH_PREFIX: 
  PATH_TO_DATA_DIR: 
  PATH_TO_PRELOAD_IMDB: 
  RANDOM_FLIP: True
  REVERSE_INPUT_CHANNEL: False
  SAMPLING_RATE: 2
  STD: [0.225, 0.225, 0.225]
  TARGET_FPS: 30
  TEST_CROP_SIZE: 256
  TRAIN_CROP_SIZE: 224
  TRAIN_JITTER_ASPECT_RELATIVE: []
  TRAIN_JITTER_MOTION_SHIFT: False
  TRAIN_JITTER_SCALES: [256, 320]
  TRAIN_JITTER_SCALES_RELATIVE: []
  TRAIN_PCA_EIGVAL: [0.225, 0.224, 0.229]
  TRAIN_PCA_EIGVEC: [[-0.5675, 0.7192, 0.4009], [-0.5808, -0.0045, -0.814], [-0.5836, -0.6948, 0.4203]]
  USE_OFFSET_SAMPLING: False
DATA_LOADER:
  ENABLE_MULTI_THREAD_DECODE: False
  NUM_WORKERS: 8
  PIN_MEMORY: True
DEMO:
  BUFFER_SIZE: 0
  CLIP_VIS_SIZE: 10
  COMMON_CLASS_NAMES: ['watch (a person)', 'talk to (e.g., self, a person, a group)', 'listen to (a person)', 'touch (an object)', 'carry/hold (an object)', 'walk', 'sit', 'lie/sleep', 'bend/bow (at the waist)']
  COMMON_CLASS_THRES: 0.7
  DETECTRON2_CFG: COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml
  DETECTRON2_THRESH: 0.9
  DETECTRON2_WEIGHTS: detectron2://COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl
  DISPLAY_HEIGHT: 0
  DISPLAY_WIDTH: 0
  ENABLE: True
  FPS: 30
  GT_BOXES: 
  INPUT_FORMAT: BGR
  INPUT_VIDEO: /u01/manvd1/action-recognition/datasets/demo/elevator/r4PKYpLtTDo.mp4
  LABEL_FILE_PATH: /u01/manvd1/action-recognition/kinetics_classnames.json
  NUM_CLIPS_SKIP: 0
  NUM_VIS_INSTANCES: 2
  OUTPUT_FILE: output/elevator/r4PKYpLtTDo.mp4
  OUTPUT_FPS: -1
  PREDS_BOXES: 
  SLOWMO: 1
  STARTING_SECOND: 900
  THREAD_ENABLE: False
  UNCOMMON_CLASS_THRES: 0.3
  VIS_MODE: thres
  WEBCAM: -1
DETECTION:
  ALIGNED: False
  ENABLE: True
  ROI_XFORM_RESOLUTION: 7
  SPATIAL_SCALE_FACTOR: 16
DIST_BACKEND: nccl
LOG_MODEL_INFO: True
LOG_PERIOD: 10
MIXUP:
  ALPHA: 0.8
  CUTMIX_ALPHA: 1.0
  ENABLE: False
  LABEL_SMOOTH_VALUE: 0.1
  PROB: 1.0
  SWITCH_PROB: 0.5
MODEL:
  ARCH: slowfast
  DROPCONNECT_RATE: 0.0
  DROPOUT_RATE: 0.5
  FC_INIT_STD: 0.01
  HEAD_ACT: softmax
  LOSS_FUNC: cross_entropy
  MODEL_NAME: SlowFast
  MULTI_PATHWAY_ARCH: ['slowfast']
  NUM_CLASSES: 400
  SINGLE_PATHWAY_ARCH: ['2d', 'c2d', 'i3d', 'slow', 'x3d', 'mvit']
MULTIGRID:
  BN_BASE_SIZE: 8
  DEFAULT_B: 0
  DEFAULT_S: 0
  DEFAULT_T: 0
  EPOCH_FACTOR: 1.5
  EVAL_FREQ: 3
  LONG_CYCLE: False
  LONG_CYCLE_FACTORS: [(0.25, 0.7071067811865476), (0.5, 0.7071067811865476), (0.5, 1), (1, 1)]
  LONG_CYCLE_SAMPLING_RATE: 0
  SHORT_CYCLE: False
  SHORT_CYCLE_FACTORS: [0.5, 0.7071067811865476]
MVIT:
  CLS_EMBED_ON: True
  DEPTH: 16
  DIM_MUL: []
  DROPOUT_RATE: 0.0
  DROPPATH_RATE: 0.1
  EMBED_DIM: 96
  HEAD_MUL: []
  MLP_RATIO: 4.0
  MODE: conv
  NORM: layernorm
  NORM_STEM: False
  NUM_HEADS: 1
  PATCH_2D: False
  PATCH_KERNEL: [3, 7, 7]
  PATCH_PADDING: [2, 4, 4]
  PATCH_STRIDE: [2, 4, 4]
  POOL_KV_KERNEL: [[]]
  POOL_KV_STRIDE: [[]]
  POOL_Q_KERNEL: [[]]
  POOL_Q_STRIDE: [[]]
  QKV_BIAS: True
  SEP_POS_EMBED: False
  ZERO_DECAY_POS_CLS: True
NONLOCAL:
  GROUP: [[1, 1], [1, 1], [1, 1], [1, 1]]
  INSTANTIATION: dot_product
  LOCATION: [[[], []], [[], []], [[], []], [[], []]]
  POOL: [[[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]]]
NUM_GPUS: 1
NUM_SHARDS: 1
OUTPUT_DIR: output/elevator
RESNET:
  DEPTH: 50
  INPLACE_RELU: True
  NUM_BLOCK_TEMP_KERNEL: [[3, 3], [4, 4], [6, 6], [3, 3]]
  NUM_GROUPS: 1
  SPATIAL_DILATIONS: [[1, 1], [1, 1], [1, 1], [1, 1]]
  SPATIAL_STRIDES: [[1, 1], [2, 2], [2, 2], [2, 2]]
  STRIDE_1X1: False
  TRANS_FUNC: bottleneck_transform
  WIDTH_PER_GROUP: 64
  ZERO_INIT_FINAL_BN: True
RNG_SEED: 0
SHARD_ID: 0
SLOWFAST:
  ALPHA: 4
  BETA_INV: 8
  FUSION_CONV_CHANNEL_RATIO: 2
  FUSION_KERNEL_SZ: 7
SOLVER:
  BASE_LR: 0.1
  BASE_LR_SCALE_NUM_SHARDS: False
  COSINE_AFTER_WARMUP: False
  COSINE_END_LR: 0.0
  DAMPENING: 0.0
  GAMMA: 0.1
  LRS: []
  LR_POLICY: cosine
  MAX_EPOCH: 196
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZING_METHOD: sgd
  STEPS: []
  STEP_SIZE: 1
  WARMUP_EPOCHS: 34.0
  WARMUP_FACTOR: 0.1
  WARMUP_START_LR: 0.01
  WEIGHT_DECAY: 0.0001
  ZERO_WD_1D_PARAM: False
TENSORBOARD:
  CATEGORIES_PATH: 
  CLASS_NAMES_PATH: 
  CONFUSION_MATRIX:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
  ENABLE: False
  HISTOGRAM:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
    TOPK: 10
  LOG_DIR: 
  MODEL_VIS:
    ACTIVATIONS: False
    COLORMAP: Pastel2
    ENABLE: False
    GRAD_CAM:
      COLORMAP: viridis
      ENABLE: True
      LAYER_LIST: []
      USE_TRUE_LABEL: False
    INPUT_VIDEO: False
    LAYER_LIST: []
    MODEL_WEIGHTS: False
    TOPK_PREDS: 1
  PREDICTIONS_PATH: 
  WRONG_PRED_VIS:
    ENABLE: False
    SUBSET_PATH: 
    TAG: Incorrectly classified videos.
TEST:
  BATCH_SIZE: 64
  CHECKPOINT_FILE_PATH: 
  CHECKPOINT_TYPE: pytorch
  DATASET: kinetics
  ENABLE: False
  NUM_ENSEMBLE_VIEWS: 10
  NUM_SPATIAL_CROPS: 3
  SAVE_RESULTS_PATH: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE: 64
  CHECKPOINT_CLEAR_NAME_PATTERN: ()
  CHECKPOINT_EPOCH_RESET: False
  CHECKPOINT_FILE_PATH: checkpoints/SLOWFAST_8x8_R50.pkl
  CHECKPOINT_INFLATE: False
  CHECKPOINT_PERIOD: 1
  CHECKPOINT_TYPE: caffe2
  DATASET: kinetics
  ENABLE: False
  EVAL_PERIOD: 10
X3D:
  BN_LIN5: False
  BOTTLENECK_FACTOR: 1.0
  CHANNELWISE_3x3x3: True
  DEPTH_FACTOR: 1.0
  DIM_C1: 12
  DIM_C5: 2048
  SCALE_RES2: False
  WIDTH_FACTOR: 1.0
[06/19 11:03:28][INFO] predictor.py: 185: Initialized Detectron2 Object Detection Model.
[06/19 11:03:29][INFO] checkpoint.py: 138: [Checkpointer] Loading from detectron2://COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl ...
[06/19 11:03:29][INFO] file_io.py: 767: URL https://dl.fbaipublicfiles.com/detectron2/COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl cached in /home/khienpv1/.torch/iopath_cache/detectron2/COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl
[06/19 11:03:29][INFO] detection_checkpoint.py:  67: Reading a file from 'Detectron2 Model Zoo'
[06/19 11:03:29][WARNING] checkpoint.py: 342: The checkpoint state_dict contains keys that are not used by the model:
  [35mproposal_generator.anchor_generator.cell_anchors.{0, 1, 2, 3, 4}[0m
[06/19 11:03:29][INFO] predictor.py:  45: Start loading model weights.
[06/19 11:03:29][INFO] checkpoint.py: 209: Loading network weights from checkpoints/SLOWFAST_8x8_R50.pkl.
[06/19 11:03:30][INFO] checkpoint.py: 255: res_conv1_bn_b: (64,) => s1.pathway0_stem.bn.bias: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_2_branch2a_bn_riv: (512,) => s5.pathway0_res2.branch2.a_bn.running_var: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_1_branch2c_bn_riv: (128,) => s4.pathway1_res1.branch2.c_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2b_bn_rm: (16,) => s3.pathway1_res2.branch2.b_bn.running_mean: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res_conv1_bn_s: (64,) => s1.pathway0_stem.bn.weight: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_3_branch2b_bn_riv: (16,) => s3.pathway1_res3.branch2.b_bn.running_var: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res4.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_1_branch2b_w: (8, 8, 1, 3, 3) => s2.pathway1_res1.branch2.b.weight: (8, 8, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_1_branch2b_bn_riv: (64,) => s5.pathway1_res1.branch2.b_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_2_branch2a_bn_riv: (32,) => s4.pathway1_res2.branch2.a_bn.running_var: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_1_branch2c_bn_s: (512,) => s3.pathway0_res1.branch2.c_bn.weight: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2b_w: (512, 512, 1, 3, 3) => s5.pathway0_res1.branch2.b.weight: (512, 512, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_0_branch2a_bn_riv: (128,) => s3.pathway0_res0.branch2.a_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2a_bn_rm: (8,) => s2.pathway1_res2.branch2.a_bn.running_mean: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_0_branch1_bn_rm: (256,) => s5.pathway1_res0.branch1_bn.running_mean: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_1_branch2b_bn_rm: (8,) => s2.pathway1_res1.branch2.b_bn.running_mean: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_riv: (64,) => s3.pathway1_res3.branch2.c_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_2_branch2b_bn_rm: (64,) => s2.pathway0_res2.branch2.b_bn.running_mean: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_3_branch2c_bn_rm: (128,) => s4.pathway1_res3.branch2.c_bn.running_mean: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2c_bn_riv: (512,) => s3.pathway0_res3.branch2.c_bn.running_var: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_0_branch2c_bn_riv: (2048,) => s5.pathway0_res0.branch2.c_bn.running_var: (2048,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_2_branch2a_w: (128, 512, 1, 1, 1) => s3.pathway0_res2.branch2.a.weight: (128, 512, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res5.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_0_branch1_bn_b: (512,) => s3.pathway0_res0.branch1_bn.bias: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_pool1_subsample_bn_rm: (16,) => s1_fuse.bn.running_mean: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2c_bn_riv: (256,) => s5.pathway1_res2.branch2.c_bn.running_var: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_2_branch2c_w: (512, 128, 1, 1, 1) => s3.pathway0_res2.branch2.c.weight: (512, 128, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_2_branch2a_bn_riv: (64,) => s2.pathway0_res2.branch2.a_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_2_branch2a_bn_rm: (512,) => s5.pathway0_res2.branch2.a_bn.running_mean: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2b_bn_b: (16,) => s3.pathway1_res2.branch2.b_bn.bias: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_1_branch2a_bn_b: (16,) => s3.pathway1_res1.branch2.a_bn.bias: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_5_branch2a_w: (256, 1024, 3, 1, 1) => s4.pathway0_res5.branch2.a.weight: (256, 1024, 3, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_0_branch2c_bn_riv: (256,) => s5.pathway1_res0.branch2.c_bn.running_var: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_0_branch2a_w: (8, 8, 3, 1, 1) => s2.pathway1_res0.branch2.a.weight: (8, 8, 3, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_2_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res2.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_2_branch2a_bn_b: (64,) => s2.pathway0_res2.branch2.a_bn.bias: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2c_bn_rm: (256,) => s5.pathway1_res2.branch2.c_bn.running_mean: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_2_branch2a_bn_s: (64,) => s2.pathway0_res2.branch2.a_bn.weight: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_1_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res1.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2c_w: (2048, 512, 1, 1, 1) => s5.pathway0_res1.branch2.c.weight: (2048, 512, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2a_bn_s: (64,) => s5.pathway1_res2.branch2.a_bn.weight: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_0_branch2c_bn_s: (128,) => s4.pathway1_res0.branch2.c_bn.weight: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2c_bn_rm: (2048,) => s5.pathway0_res1.branch2.c_bn.running_mean: (2048,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2a_bn_b: (64,) => s5.pathway1_res2.branch2.a_bn.bias: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_0_branch2c_bn_riv: (64,) => s3.pathway1_res0.branch2.c_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_0_branch2c_bn_b: (128,) => s4.pathway1_res0.branch2.c_bn.bias: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_0_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res0.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_2_branch2c_bn_rm: (128,) => s4.pathway1_res2.branch2.c_bn.running_mean: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_1_branch2b_bn_riv: (32,) => s4.pathway1_res1.branch2.b_bn.running_var: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_2_branch2a_bn_b: (128,) => s3.pathway0_res2.branch2.a_bn.bias: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_1_branch2b_bn_b: (8,) => s2.pathway1_res1.branch2.b_bn.bias: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2b_bn_b: (256,) => s4.pathway0_res4.branch2.b_bn.bias: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_0_branch1_bn_rm: (128,) => s4.pathway1_res0.branch1_bn.running_mean: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_0_branch2b_bn_riv: (64,) => s5.pathway1_res0.branch2.b_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_1_branch2c_bn_b: (512,) => s3.pathway0_res1.branch2.c_bn.bias: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_0_branch2c_bn_riv: (1024,) => s4.pathway0_res0.branch2.c_bn.running_var: (1024,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_1_branch2a_bn_s: (32,) => s4.pathway1_res1.branch2.a_bn.weight: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2b_bn_riv: (128,) => s3.pathway0_res3.branch2.b_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2a_bn_riv: (512,) => s5.pathway0_res1.branch2.a_bn.running_var: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2b_bn_s: (256,) => s4.pathway0_res4.branch2.b_bn.weight: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_0_branch1_bn_rm: (2048,) => s5.pathway0_res0.branch1_bn.running_mean: (2048,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_1_branch2a_bn_b: (32,) => s4.pathway1_res1.branch2.a_bn.bias: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_subsample_bn_s: (128,) => s3_fuse.bn.weight: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2a_bn_rm: (256,) => s4.pathway0_res4.branch2.a_bn.running_mean: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_0_branch1_w: (512, 320, 1, 1, 1) => s3.pathway0_res0.branch1.weight: (512, 320, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_0_branch2b_bn_rm: (16,) => s3.pathway1_res0.branch2.b_bn.running_mean: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_subsample_bn_b: (128,) => s3_fuse.bn.bias: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_0_branch2a_bn_riv: (512,) => s5.pathway0_res0.branch2.a_bn.running_var: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_4_branch2a_bn_riv: (32,) => s4.pathway1_res4.branch2.a_bn.running_var: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_5_branch2c_bn_riv: (1024,) => s4.pathway0_res5.branch2.c_bn.running_var: (1024,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_0_branch2c_bn_riv: (32,) => s2.pathway1_res0.branch2.c_bn.running_var: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_s: (32,) => s2.pathway1_res2.branch2.c_bn.weight: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_3_branch2a_bn_riv: (32,) => s4.pathway1_res3.branch2.a_bn.running_var: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2a_bn_s: (32,) => s4.pathway1_res5.branch2.a_bn.weight: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_0_branch2b_bn_b: (8,) => s2.pathway1_res0.branch2.b_bn.bias: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_b: (32,) => s2.pathway1_res2.branch2.c_bn.bias: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_4_branch2b_bn_rm: (32,) => s4.pathway1_res4.branch2.b_bn.running_mean: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2b_bn_b: (8,) => s2.pathway1_res2.branch2.b_bn.bias: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_0_branch1_bn_rm: (512,) => s3.pathway0_res0.branch1_bn.running_mean: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_1_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res1.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_1_branch2c_bn_riv: (256,) => s2.pathway0_res1.branch2.c_bn.running_var: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2b_w: (64, 64, 1, 3, 3) => s5.pathway1_res2.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_0_branch2c_w: (32, 8, 1, 1, 1) => s2.pathway1_res0.branch2.c.weight: (32, 8, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_5_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res5.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2c_bn_b: (512,) => s3.pathway0_res3.branch2.c_bn.bias: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2c_bn_rm: (64,) => s3.pathway1_res2.branch2.c_bn.running_mean: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_0_branch1_bn_riv: (128,) => s4.pathway1_res0.branch1_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_1_branch2b_bn_b: (64,) => s5.pathway1_res1.branch2.b_bn.bias: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_1_branch2b_w: (64, 64, 1, 3, 3) => s5.pathway1_res1.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2c_bn_s: (512,) => s3.pathway0_res3.branch2.c_bn.weight: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_2_branch2b_w: (128, 128, 1, 3, 3) => s3.pathway0_res2.branch2.b.weight: (128, 128, 1, 3, 3)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2a_w: (512, 2048, 3, 1, 1) => s5.pathway0_res1.branch2.a.weight: (512, 2048, 3, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_3_branch2a_bn_riv: (16,) => s3.pathway1_res3.branch2.a_bn.running_var: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2c_w: (32, 8, 1, 1, 1) => s2.pathway1_res2.branch2.c.weight: (32, 8, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_subsample_bn_b: (256,) => s4_fuse.bn.bias: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_5_branch2b_bn_b: (256,) => s4.pathway0_res5.branch2.b_bn.bias: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2a_bn_riv: (16,) => s3.pathway1_res2.branch2.a_bn.running_var: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_2_branch2a_w: (8, 32, 3, 1, 1) => s2.pathway1_res2.branch2.a.weight: (8, 32, 3, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_0_branch1_bn_s: (256,) => s2.pathway0_res0.branch1_bn.weight: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_0_branch2b_bn_s: (8,) => s2.pathway1_res0.branch2.b_bn.weight: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_subsample_bn_s: (256,) => s4_fuse.bn.weight: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_5_branch2b_bn_s: (256,) => s4.pathway0_res5.branch2.b_bn.weight: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_1_branch2b_bn_rm: (16,) => s3.pathway1_res1.branch2.b_bn.running_mean: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_2_branch2b_bn_riv: (64,) => s5.pathway1_res2.branch2.b_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2c_bn_b: (1024,) => s4.pathway0_res4.branch2.c_bn.bias: (1024,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_1_branch2c_bn_b: (32,) => s2.pathway1_res1.branch2.c_bn.bias: (32,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2b_bn_s: (128,) => s3.pathway0_res3.branch2.b_bn.weight: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2c_bn_riv: (64,) => s3.pathway1_res2.branch2.c_bn.running_var: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_1_branch2a_bn_rm: (64,) => s2.pathway0_res1.branch2.a_bn.running_mean: (64,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_subsample_bn_rm: (256,) => s4_fuse.bn.running_mean: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2b_bn_b: (512,) => s5.pathway0_res1.branch2.b_bn.bias: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_1_branch2a_bn_riv: (128,) => s3.pathway0_res1.branch2.a_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res5_1_branch2b_bn_s: (512,) => s5.pathway0_res1.branch2.b_bn.weight: (512,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_4_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res4.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res2_1_branch2c_w: (32, 8, 1, 1, 1) => s2.pathway1_res1.branch2.c.weight: (32, 8, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res5_0_branch1_w: (256, 128, 1, 1, 1) => s5.pathway1_res0.branch1.weight: (256, 128, 1, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res2_2_branch2c_bn_riv: (256,) => s2.pathway0_res2.branch2.c_bn.running_var: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_subsample_w: (256, 128, 7, 1, 1) => s4_fuse.conv_f2s.weight: (256, 128, 7, 1, 1)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_3_branch2b_bn_rm: (256,) => s4.pathway0_res3.branch2.b_bn.running_mean: (256,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res_conv1_bn_rm: (8,) => s1.pathway1_stem.bn.running_mean: (8,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_2_branch2b_bn_riv: (16,) => s3.pathway1_res2.branch2.b_bn.running_var: (16,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res4_2_branch2c_bn_b: (1024,) => s4.pathway0_res2.branch2.c_bn.bias: (1024,)
[06/19 11:03:30][INFO] checkpoint.py: 255: res3_3_branch2a_bn_riv: (128,) => s3.pathway0_res3.branch2.a_bn.running_var: (128,)
[06/19 11:03:30][INFO] checkpoint.py: 255: t_res3_1_branch2a_w: (16, 64, 3, 1, 1) => s3.pathway1_res1.branch2.a.weight: (16, 64, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_2_branch2a_w: (64, 256, 1, 1, 1) => s2.pathway0_res2.branch2.a.weight: (64, 256, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_0_branch2c_bn_riv: (256,) => s2.pathway0_res0.branch2.c_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_0_branch2b_bn_riv: (64,) => s2.pathway0_res0.branch2.b_bn.running_var: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_2_branch2b_bn_riv: (512,) => s5.pathway0_res2.branch2.b_bn.running_var: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2a_bn_rm: (32,) => s4.pathway1_res4.branch2.a_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_0_branch2a_bn_s: (32,) => s4.pathway1_res0.branch2.a_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2a_bn_s: (32,) => s4.pathway1_res4.branch2.a_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_1_branch2c_w: (64, 16, 1, 1, 1) => s3.pathway1_res1.branch2.c.weight: (64, 16, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_3_branch2b_bn_rm: (32,) => s4.pathway1_res3.branch2.b_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_1_branch2a_bn_s: (256,) => s4.pathway0_res1.branch2.a_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_1_branch2c_bn_b: (256,) => s2.pathway0_res1.branch2.c_bn.bias: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_2_branch2b_bn_b: (128,) => s3.pathway0_res2.branch2.b_bn.bias: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_1_branch2b_bn_s: (128,) => s3.pathway0_res1.branch2.b_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_1_branch2a_bn_b: (256,) => s4.pathway0_res1.branch2.a_bn.bias: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_1_branch2a_bn_b: (128,) => s3.pathway0_res1.branch2.a_bn.bias: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2a_w: (8, 32, 3, 1, 1) => s2.pathway1_res1.branch2.a.weight: (8, 32, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_1_branch2c_bn_s: (256,) => s2.pathway0_res1.branch2.c_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2b_bn_rm: (32,) => s4.pathway1_res5.branch2.b_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_2_branch2b_bn_s: (128,) => s3.pathway0_res2.branch2.b_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_2_branch2a_bn_rm: (16,) => s3.pathway1_res2.branch2.a_bn.running_mean: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2c_bn_s: (32,) => s2.pathway1_res1.branch2.c_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_2_branch2c_bn_riv: (2048,) => s5.pathway0_res2.branch2.c_bn.running_var: (2048,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2c_bn_s: (2048,) => s5.pathway0_res1.branch2.c_bn.weight: (2048,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_3_branch2a_bn_rm: (32,) => s4.pathway1_res3.branch2.a_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2c_bn_b: (2048,) => s5.pathway0_res1.branch2.c_bn.bias: (2048,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2a_bn_riv: (32,) => s4.pathway1_res5.branch2.a_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_1_branch2b_bn_rm: (64,) => s2.pathway0_res1.branch2.b_bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2a_bn_s: (16,) => s3.pathway1_res3.branch2.a_bn.weight: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch2c_bn_b: (2048,) => s5.pathway0_res0.branch2.c_bn.bias: (2048,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2c_bn_b: (64,) => s3.pathway1_res0.branch2.c_bn.bias: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_4_branch2b_bn_rm: (256,) => s4.pathway0_res4.branch2.b_bn.running_mean: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2b_bn_rm: (512,) => s5.pathway0_res1.branch2.b_bn.running_mean: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch2b_w: (512, 512, 1, 3, 3) => s5.pathway0_res0.branch2.b.weight: (512, 512, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2b_bn_riv: (8,) => s2.pathway1_res1.branch2.b_bn.running_var: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2c_bn_s: (64,) => s3.pathway1_res0.branch2.c_bn.weight: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2a_bn_s: (8,) => s2.pathway1_res1.branch2.a_bn.weight: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_4_branch2a_bn_s: (256,) => s4.pathway0_res4.branch2.a_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_2_branch2b_bn_s: (16,) => s3.pathway1_res2.branch2.b_bn.weight: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_0_branch2c_bn_rm: (128,) => s4.pathway1_res0.branch2.c_bn.running_mean: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2b_bn_s: (256,) => s4.pathway0_res2.branch2.b_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2a_bn_b: (8,) => s2.pathway1_res1.branch2.a_bn.bias: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_4_branch2a_bn_b: (256,) => s4.pathway0_res4.branch2.a_bn.bias: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_subsample_bn_riv: (256,) => s4_fuse.bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2b_bn_b: (256,) => s4.pathway0_res2.branch2.b_bn.bias: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_2_branch2c_w: (256, 64, 1, 1, 1) => s5.pathway1_res2.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_3_branch2c_bn_rm: (1024,) => s4.pathway0_res3.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_3_branch2a_bn_b: (32,) => s4.pathway1_res3.branch2.a_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2c_w: (64, 16, 1, 1, 1) => s3.pathway1_res0.branch2.c.weight: (64, 16, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_2_branch2a_w: (32, 128, 3, 1, 1) => s4.pathway1_res2.branch2.a.weight: (32, 128, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_5_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res5.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_3_branch2a_bn_s: (32,) => s4.pathway1_res3.branch2.a_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_3_branch2c_bn_riv: (1024,) => s4.pathway0_res3.branch2.c_bn.running_var: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_2_branch2a_bn_rm: (32,) => s4.pathway1_res2.branch2.a_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_2_branch2a_bn_rm: (128,) => s3.pathway0_res2.branch2.a_bn.running_mean: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2c_bn_rm: (1024,) => s4.pathway0_res2.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_0_branch2c_bn_rm: (1024,) => s4.pathway0_res0.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_1_branch2c_bn_riv: (256,) => s5.pathway1_res1.branch2.c_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2c_bn_rm: (128,) => s4.pathway1_res4.branch2.c_bn.running_mean: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_0_branch2a_bn_s: (128,) => s3.pathway0_res0.branch2.a_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2b_bn_riv: (16,) => s3.pathway1_res0.branch2.b_bn.running_var: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_subsample_bn_rm: (128,) => s3_fuse.bn.running_mean: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_0_branch2a_bn_b: (128,) => s3.pathway0_res0.branch2.a_bn.bias: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_4_branch2a_w: (256, 1024, 3, 1, 1) => s4.pathway0_res4.branch2.a.weight: (256, 1024, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_riv: (32,) => s2.pathway1_res2.branch2.c_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2a_bn_rm: (16,) => s3.pathway1_res3.branch2.a_bn.running_mean: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2b_w: (8, 8, 1, 3, 3) => s2.pathway1_res2.branch2.b.weight: (8, 8, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch2a_bn_rm: (8,) => s2.pathway1_res0.branch2.a_bn.running_mean: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2c_bn_rm: (64,) => s3.pathway1_res0.branch2.c_bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_5_branch2a_bn_rm: (256,) => s4.pathway0_res5.branch2.a_bn.running_mean: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2b_bn_s: (32,) => s4.pathway1_res4.branch2.b_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch2b_bn_riv: (512,) => s5.pathway0_res0.branch2.b_bn.running_var: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_1_branch2b_bn_b: (32,) => s4.pathway1_res1.branch2.b_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_1_branch2c_bn_rm: (512,) => s3.pathway0_res1.branch2.c_bn.running_mean: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2b_bn_b: (32,) => s4.pathway1_res4.branch2.b_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_1_branch2a_bn_s: (128,) => s3.pathway0_res1.branch2.a_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_b: (64,) => s3.pathway1_res3.branch2.c_bn.bias: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_1_branch2b_bn_s: (32,) => s4.pathway1_res1.branch2.b_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_4_branch2a_bn_b: (32,) => s4.pathway1_res4.branch2.a_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2a_bn_s: (512,) => s5.pathway0_res1.branch2.a_bn.weight: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_0_branch2a_bn_riv: (256,) => s4.pathway0_res0.branch2.a_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2a_bn_b: (512,) => s5.pathway0_res1.branch2.a_bn.bias: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2b_bn_riv: (256,) => s4.pathway0_res2.branch2.b_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2b_bn_rm: (8,) => s2.pathway1_res2.branch2.b_bn.running_mean: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_0_branch2c_w: (512, 128, 1, 1, 1) => s3.pathway0_res0.branch2.c.weight: (512, 128, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2a_bn_s: (16,) => s3.pathway1_res0.branch2.a_bn.weight: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_2_branch2c_bn_riv: (128,) => s4.pathway1_res2.branch2.c_bn.running_var: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2a_bn_b: (16,) => s3.pathway1_res0.branch2.a_bn.bias: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_1_branch2a_bn_riv: (16,) => s3.pathway1_res1.branch2.a_bn.running_var: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch2b_bn_riv: (8,) => s2.pathway1_res0.branch2.b_bn.running_var: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_1_branch2a_bn_s: (16,) => s3.pathway1_res1.branch2.a_bn.weight: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_5_branch2b_bn_riv: (256,) => s4.pathway0_res5.branch2.b_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_2_branch2b_bn_rm: (512,) => s5.pathway0_res2.branch2.b_bn.running_mean: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_s: (64,) => s3.pathway1_res3.branch2.c_bn.weight: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch1_bn_riv: (32,) => s2.pathway1_res0.branch1_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_2_branch2b_bn_riv: (64,) => s2.pathway0_res2.branch2.b_bn.running_var: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_0_branch1_bn_rm: (256,) => s2.pathway0_res0.branch1_bn.running_mean: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_2_branch2b_w: (64, 64, 1, 3, 3) => s2.pathway0_res2.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_1_branch2a_bn_riv: (64,) => s2.pathway0_res1.branch2.a_bn.running_var: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_2_branch2b_bn_rm: (32,) => s4.pathway1_res2.branch2.b_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2a_bn_riv: (256,) => s4.pathway0_res2.branch2.a_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_2_branch2c_bn_s: (1024,) => s4.pathway0_res2.branch2.c_bn.weight: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_3_branch2a_bn_s: (128,) => s3.pathway0_res3.branch2.a_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch2a_bn_riv: (8,) => s2.pathway1_res0.branch2.a_bn.running_var: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_0_branch2b_w: (128, 128, 1, 3, 3) => s3.pathway0_res0.branch2.b.weight: (128, 128, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_5_branch2a_bn_riv: (256,) => s4.pathway0_res5.branch2.a_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_3_branch2b_bn_rm: (16,) => s3.pathway1_res3.branch2.b_bn.running_mean: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch1_bn_s: (32,) => s2.pathway1_res0.branch1_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_0_branch2b_bn_riv: (256,) => s4.pathway0_res0.branch2.b_bn.running_var: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_0_branch2b_bn_riv: (32,) => s4.pathway1_res0.branch2.b_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2b_bn_b: (16,) => s3.pathway1_res0.branch2.b_bn.bias: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch1_bn_b: (32,) => s2.pathway1_res0.branch1_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_0_branch1_bn_s: (256,) => s5.pathway1_res0.branch1_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_1_branch2b_bn_s: (64,) => s5.pathway1_res1.branch2.b_bn.weight: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch1_bn_riv: (64,) => s3.pathway1_res0.branch1_bn.running_var: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_subsample_bn_s: (64,) => s2_fuse.bn.weight: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch2c_w: (2048, 512, 1, 1, 1) => s5.pathway0_res0.branch2.c.weight: (2048, 512, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_s: (128,) => s4.pathway1_res5.branch2.c_bn.weight: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_0_branch2b_bn_rm: (64,) => s5.pathway1_res0.branch2.b_bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2b_bn_s: (32,) => s4.pathway1_res5.branch2.b_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2b_bn_riv: (32,) => s4.pathway1_res5.branch2.b_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_2_branch2a_w: (512, 2048, 3, 1, 1) => s5.pathway0_res2.branch2.a.weight: (512, 2048, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_1_branch2a_w: (64, 256, 3, 1, 1) => s5.pathway1_res1.branch2.a.weight: (64, 256, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_3_branch2b_bn_riv: (32,) => s4.pathway1_res3.branch2.b_bn.running_var: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_subsample_bn_b: (64,) => s2_fuse.bn.bias: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_b: (128,) => s4.pathway1_res5.branch2.c_bn.bias: (128,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2b_bn_b: (32,) => s4.pathway1_res5.branch2.b_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_0_branch2c_bn_rm: (256,) => s2.pathway0_res0.branch2.c_bn.running_mean: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch1_w: (2048, 1280, 1, 1, 1) => s5.pathway0_res0.branch1.weight: (2048, 1280, 1, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_2_branch2c_bn_b: (256,) => s2.pathway0_res2.branch2.c_bn.bias: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_5_branch2c_bn_b: (1024,) => s4.pathway0_res5.branch2.c_bn.bias: (1024,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_subsample_bn_rm: (64,) => s2_fuse.bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch2c_bn_b: (32,) => s2.pathway1_res0.branch2.c_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res4_3_branch2b_bn_s: (256,) => s4.pathway0_res3.branch2.b_bn.weight: (256,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res3_2_branch2c_bn_riv: (512,) => s3.pathway0_res2.branch2.c_bn.running_var: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_0_branch2a_w: (512, 1280, 3, 1, 1) => s5.pathway0_res0.branch2.a.weight: (512, 1280, 3, 1, 1)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_0_branch2c_bn_s: (32,) => s2.pathway1_res0.branch2.c_bn.weight: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_1_branch2a_bn_rm: (8,) => s2.pathway1_res1.branch2.a_bn.running_mean: (8,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_0_branch2b_bn_rm: (64,) => s2.pathway0_res0.branch2.b_bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res2_2_branch2a_bn_rm: (64,) => s2.pathway0_res2.branch2.a_bn.running_mean: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2a_bn_riv: (16,) => s3.pathway1_res0.branch2.a_bn.running_var: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_5_branch2a_bn_rm: (32,) => s4.pathway1_res5.branch2.a_bn.running_mean: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_0_branch2b_bn_s: (16,) => s3.pathway1_res0.branch2.b_bn.weight: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res3_2_branch2a_bn_b: (16,) => s3.pathway1_res2.branch2.a_bn.bias: (16,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res5_2_branch2b_bn_b: (64,) => s5.pathway1_res2.branch2.b_bn.bias: (64,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_1_branch2a_bn_rm: (512,) => s5.pathway0_res1.branch2.a_bn.running_mean: (512,)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res4_0_branch2a_bn_b: (32,) => s4.pathway1_res0.branch2.a_bn.bias: (32,)
[06/19 11:03:31][INFO] checkpoint.py: 255: res5_2_branch2b_w: (512, 512, 1, 3, 3) => s5.pathway0_res2.branch2.b.weight: (512, 512, 1, 3, 3)
[06/19 11:03:31][INFO] checkpoint.py: 255: t_res2_2_branch2a_bn_riv: (8,) => s2.pathway1_res2.branch2.a_bn.running_var: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_1_branch2c_bn_riv: (32,) => s2.pathway1_res1.branch2.c_bn.running_var: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_2_branch2b_bn_s: (64,) => s5.pathway1_res2.branch2.b_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2a_bn_rm: (64,) => s5.pathway1_res1.branch2.a_bn.running_mean: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2c_bn_b: (1024,) => s4.pathway0_res0.branch2.c_bn.bias: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2a_w: (256, 1024, 3, 1, 1) => s4.pathway0_res2.branch2.a.weight: (256, 1024, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_0_branch2a_w: (16, 32, 3, 1, 1) => s3.pathway1_res0.branch2.a.weight: (16, 32, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2c_bn_s: (1024,) => s4.pathway0_res0.branch2.c_bn.weight: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_3_branch2b_bn_b: (128,) => s3.pathway0_res3.branch2.b_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_1_branch2c_bn_riv: (2048,) => s5.pathway0_res1.branch2.c_bn.running_var: (2048,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_0_branch1_w: (64, 32, 1, 1, 1) => s3.pathway1_res0.branch1.weight: (64, 32, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2a_bn_riv: (256,) => s4.pathway0_res1.branch2.a_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: conv1_w: (64, 3, 1, 7, 7) => s1.pathway0_stem.conv.weight: (64, 3, 1, 7, 7)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch1_bn_riv: (256,) => s2.pathway0_res0.branch1_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_2_branch2c_bn_rm: (512,) => s3.pathway0_res2.branch2.c_bn.running_mean: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_4_branch2c_bn_s: (1024,) => s4.pathway0_res4.branch2.c_bn.weight: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2c_bn_b: (1024,) => s4.pathway0_res1.branch2.c_bn.bias: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2b_bn_rm: (512,) => s5.pathway0_res0.branch2.b_bn.running_mean: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2c_bn_s: (256,) => s5.pathway1_res1.branch2.c_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_1_branch2c_bn_rm: (32,) => s2.pathway1_res1.branch2.c_bn.running_mean: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_4_branch2b_bn_riv: (256,) => s4.pathway0_res4.branch2.b_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2c_bn_s: (1024,) => s4.pathway0_res1.branch2.c_bn.weight: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2c_bn_riv: (1024,) => s4.pathway0_res1.branch2.c_bn.running_var: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2c_bn_b: (256,) => s5.pathway1_res1.branch2.c_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_5_branch2b_bn_rm: (256,) => s4.pathway0_res5.branch2.b_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_5_branch2a_w: (32, 128, 3, 1, 1) => s4.pathway1_res5.branch2.a.weight: (32, 128, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2a_bn_b: (64,) => s5.pathway1_res0.branch2.a_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2b_bn_rm: (128,) => s3.pathway0_res1.branch2.b_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_pool1_subsample_bn_riv: (16,) => s1_fuse.bn.running_var: (16,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2a_bn_rm: (256,) => s4.pathway0_res1.branch2.a_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2a_bn_s: (64,) => s5.pathway1_res0.branch2.a_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_1_branch2c_w: (256, 64, 1, 1, 1) => s2.pathway0_res1.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2b_bn_s: (16,) => s3.pathway1_res1.branch2.b_bn.weight: (16,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2a_bn_riv: (64,) => s2.pathway0_res0.branch2.a_bn.running_var: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2a_bn_rm: (512,) => s5.pathway0_res0.branch2.a_bn.running_mean: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2c_bn_riv: (512,) => s3.pathway0_res0.branch2.c_bn.running_var: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_2_branch2c_bn_s: (512,) => s3.pathway0_res2.branch2.c_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2b_bn_b: (16,) => s3.pathway1_res1.branch2.b_bn.bias: (16,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_2_branch2a_bn_s: (16,) => s3.pathway1_res2.branch2.a_bn.weight: (16,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_4_branch2c_bn_s: (128,) => s4.pathway1_res4.branch2.c_bn.weight: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_2_branch2b_bn_riv: (8,) => s2.pathway1_res2.branch2.b_bn.running_var: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2a_bn_b: (512,) => s5.pathway0_res0.branch2.a_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_4_branch2c_bn_b: (128,) => s4.pathway1_res4.branch2.c_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2b_bn_b: (128,) => s3.pathway0_res1.branch2.b_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_2_branch2a_bn_s: (128,) => s3.pathway0_res2.branch2.a_bn.weight: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2a_bn_rm: (32,) => s4.pathway1_res1.branch2.a_bn.running_mean: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2a_bn_s: (512,) => s5.pathway0_res0.branch2.a_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_2_branch2c_bn_b: (256,) => s5.pathway1_res2.branch2.c_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2b_bn_rm: (32,) => s4.pathway1_res0.branch2.b_bn.running_mean: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch1_w: (128, 64, 1, 1, 1) => s4.pathway1_res0.branch1.weight: (128, 64, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2b_bn_s: (256,) => s4.pathway0_res0.branch2.b_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2a_bn_b: (256,) => s4.pathway0_res2.branch2.a_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_2_branch2b_bn_s: (512,) => s5.pathway0_res2.branch2.b_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_3_branch2c_bn_s: (1024,) => s4.pathway0_res3.branch2.c_bn.weight: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2a_bn_s: (256,) => s4.pathway0_res2.branch2.a_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_2_branch2b_bn_b: (512,) => s5.pathway0_res2.branch2.b_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_0_branch1_bn_rm: (32,) => s2.pathway1_res0.branch1_bn.running_mean: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2a_w: (128, 512, 1, 1, 1) => s3.pathway0_res1.branch2.a.weight: (128, 512, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_3_branch2c_bn_b: (1024,) => s4.pathway0_res3.branch2.c_bn.bias: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2b_bn_rm: (128,) => s3.pathway0_res0.branch2.b_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2b_bn_b: (512,) => s5.pathway0_res0.branch2.b_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_2_branch2a_bn_b: (512,) => s5.pathway0_res2.branch2.a_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch1_bn_riv: (256,) => s5.pathway1_res0.branch1_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_0_branch1_bn_b: (64,) => s3.pathway1_res0.branch1_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2c_bn_b: (128,) => s4.pathway1_res1.branch2.c_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_3_branch2a_bn_b: (128,) => s3.pathway0_res3.branch2.a_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res0.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_2_branch2a_bn_s: (512,) => s5.pathway0_res2.branch2.a_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_0_branch1_bn_s: (64,) => s3.pathway1_res0.branch1_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2c_bn_s: (128,) => s4.pathway1_res1.branch2.c_bn.weight: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch1_bn_b: (256,) => s2.pathway0_res0.branch1_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2b_bn_riv: (256,) => s4.pathway0_res1.branch2.b_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2b_bn_rm: (256,) => s4.pathway0_res0.branch2.b_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch1_bn_s: (1024,) => s4.pathway0_res0.branch1_bn.weight: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_2_branch2c_w: (64, 16, 1, 1, 1) => s3.pathway1_res2.branch2.c.weight: (64, 16, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2a_bn_rm: (256,) => s4.pathway0_res2.branch2.a_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch1_bn_b: (128,) => s4.pathway1_res0.branch1_bn.bias: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2b_w: (64, 64, 1, 3, 3) => s2.pathway0_res0.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2c_w: (256, 64, 1, 1, 1) => s5.pathway1_res0.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch1_bn_b: (1024,) => s4.pathway0_res0.branch1_bn.bias: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2c_bn_rm: (1024,) => s4.pathway0_res1.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_2_branch2b_bn_riv: (32,) => s4.pathway1_res2.branch2.b_bn.running_var: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_3_branch2a_bn_rm: (256,) => s4.pathway0_res3.branch2.a_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2b_bn_b: (64,) => s5.pathway1_res0.branch2.b_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2a_w: (32, 128, 3, 1, 1) => s4.pathway1_res1.branch2.a.weight: (32, 128, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res2.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2c_w: (512, 128, 1, 1, 1) => s3.pathway0_res1.branch2.c.weight: (512, 128, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch1_bn_s: (512,) => s3.pathway0_res0.branch1_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2b_w: (16, 16, 1, 3, 3) => s3.pathway1_res1.branch2.b.weight: (16, 16, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2a_w: (64, 128, 3, 1, 1) => s5.pathway1_res0.branch2.a.weight: (64, 128, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_2_branch2a_bn_rm: (64,) => s5.pathway1_res2.branch2.a_bn.running_mean: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res1.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_2_branch2c_bn_s: (64,) => s3.pathway1_res2.branch2.c_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2b_bn_rm: (256,) => s4.pathway0_res1.branch2.b_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_3_branch2b_bn_rm: (128,) => s3.pathway0_res3.branch2.b_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2b_bn_b: (256,) => s4.pathway0_res0.branch2.b_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_2_branch2c_bn_b: (64,) => s3.pathway1_res2.branch2.c_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2a_bn_riv: (64,) => s5.pathway1_res1.branch2.a_bn.running_var: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2c_bn_riv: (512,) => s3.pathway0_res1.branch2.c_bn.running_var: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2c_bn_b: (512,) => s3.pathway0_res0.branch2.c_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2a_bn_rm: (128,) => s3.pathway0_res0.branch2.a_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2c_bn_s: (2048,) => s5.pathway0_res0.branch2.c_bn.weight: (2048,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2a_bn_b: (64,) => s5.pathway1_res1.branch2.a_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2b_bn_rm: (256,) => s4.pathway0_res2.branch2.b_bn.running_mean: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_2_branch2c_w: (2048, 512, 1, 1, 1) => s5.pathway0_res2.branch2.c.weight: (2048, 512, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2c_bn_s: (512,) => s3.pathway0_res0.branch2.c_bn.weight: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2a_w: (64, 80, 1, 1, 1) => s2.pathway0_res0.branch2.a.weight: (64, 80, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_1_branch2a_bn_s: (64,) => s5.pathway1_res1.branch2.a_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_3_branch2a_bn_riv: (256,) => s4.pathway0_res3.branch2.a_bn.running_var: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2c_bn_s: (64,) => s3.pathway1_res1.branch2.c_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_2_branch2c_bn_s: (256,) => s5.pathway1_res2.branch2.c_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_4_branch2a_w: (32, 128, 3, 1, 1) => s4.pathway1_res4.branch2.a.weight: (32, 128, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2c_bn_b: (64,) => s3.pathway1_res1.branch2.c_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_3_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res3.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res0.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_2_branch2c_w: (256, 64, 1, 1, 1) => s2.pathway0_res2.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_2_branch2a_bn_riv: (64,) => s5.pathway1_res2.branch2.a_bn.running_var: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2b_bn_b: (32,) => s4.pathway1_res0.branch2.b_bn.bias: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2c_bn_riv: (128,) => s4.pathway1_res0.branch2.c_bn.running_var: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_0_branch2b_bn_s: (32,) => s4.pathway1_res0.branch2.b_bn.weight: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_0_branch2b_w: (16, 16, 1, 3, 3) => s3.pathway1_res0.branch2.b.weight: (16, 16, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_3_branch2a_w: (32, 128, 3, 1, 1) => s4.pathway1_res3.branch2.a.weight: (32, 128, 3, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2b_bn_riv: (128,) => s3.pathway0_res0.branch2.b_bn.running_var: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2a_w: (128, 320, 1, 1, 1) => s3.pathway0_res0.branch2.a.weight: (128, 320, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2a_bn_s: (64,) => s2.pathway0_res0.branch2.a_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_1_branch2c_bn_rm: (64,) => s3.pathway1_res1.branch2.c_bn.running_mean: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res_conv1_bn_b: (8,) => s1.pathway1_stem.bn.bias: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_3_branch2a_bn_b: (256,) => s4.pathway0_res3.branch2.a_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_1_branch2a_bn_s: (64,) => s2.pathway0_res1.branch2.a_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_0_branch2c_bn_rm: (512,) => s3.pathway0_res0.branch2.c_bn.running_mean: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_1_branch2b_bn_s: (8,) => s2.pathway1_res1.branch2.b_bn.weight: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_2_branch2c_bn_b: (512,) => s3.pathway0_res2.branch2.c_bn.bias: (512,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2a_bn_b: (64,) => s2.pathway0_res0.branch2.a_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_1_branch2b_bn_s: (256,) => s4.pathway0_res1.branch2.b_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_2_branch2b_w: (16, 16, 1, 3, 3) => s3.pathway1_res2.branch2.b.weight: (16, 16, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res_conv1_bn_s: (8,) => s1.pathway1_stem.bn.weight: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_0_branch2b_bn_rm: (8,) => s2.pathway1_res0.branch2.b_bn.running_mean: (8,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_1_branch2a_bn_b: (64,) => s2.pathway0_res1.branch2.a_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_2_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res2.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2b_w: (128, 128, 1, 3, 3) => s3.pathway0_res1.branch2.b.weight: (128, 128, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2a_bn_rm: (128,) => s3.pathway0_res1.branch2.a_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_3_branch2c_w: (512, 128, 1, 1, 1) => s3.pathway0_res3.branch2.c.weight: (512, 128, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_1_branch2a_bn_riv: (32,) => s4.pathway1_res1.branch2.a_bn.running_var: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_4_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res4.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2a_bn_rm: (64,) => s2.pathway0_res0.branch2.a_bn.running_mean: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2b_bn_b: (64,) => s2.pathway0_res0.branch2.b_bn.bias: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2a_bn_s: (256,) => s4.pathway0_res0.branch2.a_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_3_branch2a_w: (128, 512, 1, 1, 1) => s3.pathway0_res3.branch2.a.weight: (128, 512, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_4_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res4.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res3_1_branch2b_bn_riv: (128,) => s3.pathway0_res1.branch2.b_bn.running_var: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2b_bn_s: (64,) => s2.pathway0_res0.branch2.b_bn.weight: (64,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res4_0_branch2a_bn_b: (256,) => s4.pathway0_res0.branch2.a_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res5_0_branch2c_bn_s: (256,) => s5.pathway1_res0.branch2.c_bn.weight: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_rm: (128,) => s4.pathway1_res5.branch2.c_bn.running_mean: (128,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_subsample_w: (128, 64, 7, 1, 1) => s3_fuse.conv_f2s.weight: (128, 64, 7, 1, 1)
[06/19 11:03:32][INFO] checkpoint.py: 255: res2_0_branch2c_bn_b: (256,) => s2.pathway0_res0.branch2.c_bn.bias: (256,)
[06/19 11:03:32][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_rm: (32,) => s2.pathway1_res2.branch2.c_bn.running_mean: (32,)
[06/19 11:03:32][INFO] checkpoint.py: 255: res5_0_branch2b_bn_s: (512,) => s5.pathway0_res0.branch2.b_bn.weight: (512,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2a_bn_rm: (64,) => s5.pathway1_res0.branch2.a_bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_2_branch2c_bn_rm: (2048,) => s5.pathway0_res2.branch2.c_bn.running_mean: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_0_branch2c_bn_s: (256,) => s2.pathway0_res0.branch2.c_bn.weight: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res3.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2a_bn_riv: (64,) => s5.pathway1_res0.branch2.a_bn.running_var: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_0_branch2b_bn_b: (128,) => s3.pathway0_res0.branch2.b_bn.bias: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_1_branch2c_bn_riv: (64,) => s3.pathway1_res1.branch2.c_bn.running_var: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_1_branch2b_bn_b: (256,) => s4.pathway0_res1.branch2.b_bn.bias: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch2a_bn_rm: (256,) => s4.pathway0_res0.branch2.a_bn.running_mean: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2c_bn_s: (128,) => s4.pathway1_res3.branch2.c_bn.weight: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_0_branch1_w: (256, 80, 1, 1, 1) => s2.pathway0_res0.branch1.weight: (256, 80, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2c_bn_b: (256,) => s5.pathway1_res0.branch2.c_bn.bias: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2c_bn_rm: (256,) => s2.pathway0_res1.branch2.c_bn.running_mean: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_0_branch2b_bn_s: (128,) => s3.pathway0_res0.branch2.b_bn.weight: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2b_w: (16, 16, 1, 3, 3) => s3.pathway1_res3.branch2.b.weight: (16, 16, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_0_branch2a_bn_rm: (32,) => s4.pathway1_res0.branch2.a_bn.running_mean: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_rm: (64,) => s3.pathway1_res3.branch2.c_bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2c_bn_b: (128,) => s4.pathway1_res3.branch2.c_bn.bias: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2a_bn_s: (32,) => s4.pathway1_res2.branch2.a_bn.weight: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_5_branch2c_bn_rm: (1024,) => s4.pathway0_res5.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2a_bn_b: (32,) => s4.pathway1_res2.branch2.a_bn.bias: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res_conv1_bn_riv: (64,) => s1.pathway0_stem.bn.running_var: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch1_bn_b: (256,) => s5.pathway1_res0.branch1_bn.bias: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_4_branch2c_bn_riv: (128,) => s4.pathway1_res4.branch2.c_bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_0_branch2a_w: (32, 64, 3, 1, 1) => s4.pathway1_res0.branch2.a.weight: (32, 64, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_5_branch2c_bn_riv: (128,) => s4.pathway1_res5.branch2.c_bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_4_branch2a_bn_riv: (256,) => s4.pathway0_res4.branch2.a_bn.running_var: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_1_branch2a_bn_riv: (8,) => s2.pathway1_res1.branch2.a_bn.running_var: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_1_branch2c_w: (256, 64, 1, 1, 1) => s5.pathway1_res1.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_1_branch2b_bn_riv: (512,) => s5.pathway0_res1.branch2.b_bn.running_var: (512,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_0_branch2c_bn_rm: (32,) => s2.pathway1_res0.branch2.c_bn.running_mean: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2c_bn_subsample_bn_riv: (128,) => s3_fuse.bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_2_branch2c_bn_s: (2048,) => s5.pathway0_res2.branch2.c_bn.weight: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2a_bn_b: (16,) => s3.pathway1_res3.branch2.a_bn.bias: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_0_branch2c_w: (256, 64, 1, 1, 1) => s2.pathway0_res0.branch2.c.weight: (256, 64, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_2_branch2c_bn_b: (2048,) => s5.pathway0_res2.branch2.c_bn.bias: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_5_branch2a_bn_b: (32,) => s4.pathway1_res5.branch2.a_bn.bias: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2b_w: (64, 64, 1, 3, 3) => s5.pathway1_res0.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_5_branch2c_w: (128, 32, 1, 1, 1) => s4.pathway1_res5.branch2.c.weight: (128, 32, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_2_branch2a_bn_s: (8,) => s2.pathway1_res2.branch2.a_bn.weight: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2a_bn_s: (256,) => s4.pathway0_res3.branch2.a_bn.weight: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2b_bn_riv: (256,) => s4.pathway0_res3.branch2.b_bn.running_var: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_2_branch2c_bn_riv: (1024,) => s4.pathway0_res2.branch2.c_bn.running_var: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_1_branch2b_w: (256, 256, 1, 3, 3) => s4.pathway0_res1.branch2.b.weight: (256, 256, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_2_branch2b_bn_rm: (64,) => s5.pathway1_res2.branch2.b_bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2a_w: (64, 256, 1, 1, 1) => s2.pathway0_res1.branch2.a.weight: (64, 256, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch1_w: (1024, 640, 1, 1, 1) => s4.pathway0_res0.branch1.weight: (1024, 640, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2b_bn_b: (32,) => s4.pathway1_res2.branch2.b_bn.bias: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res2.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res_conv1_bn_riv: (8,) => s1.pathway1_stem.bn.running_var: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2b_bn_s: (16,) => s3.pathway1_res3.branch2.b_bn.weight: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2b_bn_s: (32,) => s4.pathway1_res2.branch2.b_bn.weight: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_3_branch2c_bn_rm: (512,) => s3.pathway0_res3.branch2.c_bn.running_mean: (512,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_0_branch2a_bn_riv: (32,) => s4.pathway1_res0.branch2.a_bn.running_var: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_2_branch2b_bn_riv: (128,) => s3.pathway0_res2.branch2.b_bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2b_bn_b: (16,) => s3.pathway1_res3.branch2.b_bn.bias: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_0_branch2b_w: (8, 8, 1, 3, 3) => s2.pathway1_res0.branch2.b.weight: (8, 8, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_3_branch2a_bn_rm: (128,) => s3.pathway0_res3.branch2.a_bn.running_mean: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_0_branch1_bn_riv: (2048,) => s5.pathway0_res0.branch1_bn.running_var: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_4_branch2c_bn_riv: (1024,) => s4.pathway0_res4.branch2.c_bn.running_var: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_1_branch2b_bn_rm: (32,) => s4.pathway1_res1.branch2.b_bn.running_mean: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_2_branch2b_bn_s: (64,) => s2.pathway0_res2.branch2.b_bn.weight: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res_conv1_bn_rm: (64,) => s1.pathway0_stem.bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_2_branch2b_bn_rm: (128,) => s3.pathway0_res2.branch2.b_bn.running_mean: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_2_branch2b_bn_b: (64,) => s2.pathway0_res2.branch2.b_bn.bias: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_2_branch2c_bn_s: (256,) => s2.pathway0_res2.branch2.c_bn.weight: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_1_branch2c_bn_rm: (128,) => s4.pathway1_res1.branch2.c_bn.running_mean: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_conv1_w: (8, 3, 5, 7, 7) => s1.pathway1_stem.conv.weight: (8, 3, 5, 7, 7)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch1_bn_rm: (1024,) => s4.pathway0_res0.branch1_bn.running_mean: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch1_bn_riv: (1024,) => s4.pathway0_res0.branch1_bn.running_var: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_0_branch1_bn_s: (2048,) => s5.pathway0_res0.branch1_bn.weight: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res0.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2b_bn_b: (64,) => s2.pathway0_res1.branch2.b_bn.bias: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_0_branch2c_bn_rm: (2048,) => s5.pathway0_res0.branch2.c_bn.running_mean: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res5_0_branch1_bn_b: (2048,) => s5.pathway0_res0.branch1_bn.bias: (2048,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_0_branch2a_w: (256, 640, 3, 1, 1) => s4.pathway0_res0.branch2.a.weight: (256, 640, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_4_branch2c_bn_rm: (1024,) => s4.pathway0_res4.branch2.c_bn.running_mean: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2b_bn_s: (64,) => s2.pathway0_res1.branch2.b_bn.weight: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2c_bn_rm: (256,) => s5.pathway1_res0.branch2.c_bn.running_mean: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_1_branch2a_bn_rm: (16,) => s3.pathway1_res1.branch2.a_bn.running_mean: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2b_w: (32, 32, 1, 3, 3) => s4.pathway1_res3.branch2.b.weight: (32, 32, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_0_branch1_bn_riv: (512,) => s3.pathway0_res0.branch1_bn.running_var: (512,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_2_branch2a_bn_b: (8,) => s2.pathway1_res2.branch2.a_bn.bias: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2c_w: (1024, 256, 1, 1, 1) => s4.pathway0_res3.branch2.c.weight: (1024, 256, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_0_branch2b_bn_s: (64,) => s5.pathway1_res0.branch2.b_bn.weight: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_1_branch2b_bn_rm: (64,) => s5.pathway1_res1.branch2.b_bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2b_bn_s: (32,) => s4.pathway1_res3.branch2.b_bn.weight: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_pool1_subsample_bn_s: (16,) => s1_fuse.bn.weight: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_2_branch2b_bn_s: (8,) => s2.pathway1_res2.branch2.b_bn.weight: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2b_w: (64, 64, 1, 3, 3) => s2.pathway0_res1.branch2.b.weight: (64, 64, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_1_branch2c_bn_rm: (256,) => s5.pathway1_res1.branch2.c_bn.running_mean: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_2_branch2a_bn_riv: (128,) => s3.pathway0_res2.branch2.a_bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2b_bn_b: (32,) => s4.pathway1_res3.branch2.b_bn.bias: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_pool1_subsample_bn_b: (16,) => s1_fuse.bn.bias: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_0_branch1_bn_s: (128,) => s4.pathway1_res0.branch1_bn.weight: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_4_branch2b_bn_riv: (32,) => s4.pathway1_res4.branch2.b_bn.running_var: (32,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_0_branch1_bn_rm: (64,) => s3.pathway1_res0.branch1_bn.running_mean: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_0_branch2a_bn_rm: (16,) => s3.pathway1_res0.branch2.a_bn.running_mean: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_3_branch2c_bn_riv: (128,) => s4.pathway1_res3.branch2.c_bn.running_var: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_2_branch2c_bn_rm: (256,) => s2.pathway0_res2.branch2.c_bn.running_mean: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: pred_b: (400,) => head.projection.bias: (400,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res3_3_branch2b_w: (128, 128, 1, 3, 3) => s3.pathway0_res3.branch2.b.weight: (128, 128, 1, 3, 3)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_2_branch2a_w: (16, 64, 3, 1, 1) => s3.pathway1_res2.branch2.a.weight: (16, 64, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2c_bn_s: (128,) => s4.pathway1_res2.branch2.c_bn.weight: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res2_1_branch2b_bn_riv: (64,) => s2.pathway0_res1.branch2.b_bn.running_var: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: pred_w: (400, 2304) => head.projection.weight: (400, 2304)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2a_w: (256, 1024, 3, 1, 1) => s4.pathway0_res3.branch2.a.weight: (256, 1024, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_subsample_bn_riv: (64,) => s2_fuse.bn.running_var: (64,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2a_w: (16, 64, 3, 1, 1) => s3.pathway1_res3.branch2.a.weight: (16, 64, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_1_branch2b_bn_riv: (16,) => s3.pathway1_res1.branch2.b_bn.running_var: (16,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_1_branch2a_w: (256, 1024, 3, 1, 1) => s4.pathway0_res1.branch2.a.weight: (256, 1024, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_0_branch1_w: (32, 8, 1, 1, 1) => s2.pathway1_res0.branch1.weight: (32, 8, 1, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_5_branch2c_bn_s: (1024,) => s4.pathway0_res5.branch2.c_bn.weight: (1024,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res4_2_branch2c_bn_b: (128,) => s4.pathway1_res2.branch2.c_bn.bias: (128,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_0_branch2a_bn_s: (8,) => s2.pathway1_res0.branch2.a_bn.weight: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_2_branch2c_bn_subsample_w: (64, 32, 7, 1, 1) => s2_fuse.conv_f2s.weight: (64, 32, 7, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_5_branch2a_bn_s: (256,) => s4.pathway0_res5.branch2.a_bn.weight: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_3_branch2b_bn_b: (256,) => s4.pathway0_res3.branch2.b_bn.bias: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res5_2_branch2a_w: (64, 256, 3, 1, 1) => s5.pathway1_res2.branch2.a.weight: (64, 256, 3, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_pool1_subsample_w: (16, 8, 7, 1, 1) => s1_fuse.conv_f2s.weight: (16, 8, 7, 1, 1)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res2_0_branch2a_bn_b: (8,) => s2.pathway1_res0.branch2.a_bn.bias: (8,)
[06/19 11:03:33][INFO] checkpoint.py: 255: res4_5_branch2a_bn_b: (256,) => s4.pathway0_res5.branch2.a_bn.bias: (256,)
[06/19 11:03:33][INFO] checkpoint.py: 255: t_res3_3_branch2c_w: (64, 16, 1, 1, 1) => s3.pathway1_res3.branch2.c.weight: (64, 16, 1, 1, 1)
[06/19 11:03:33][INFO] predictor.py:  47: Finish loading model weights
1it [00:10, 10.24s/it]2it [00:10,  4.44s/it]3it [00:10,  2.58s/it]4it [00:11,  1.71s/it]5it [00:11,  1.24s/it]6it [00:12,  1.05it/s]Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
7it [00:12,  1.25it/s]Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
8it [00:14,  1.08s/it]Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([2, 2048, 7, 7])
Shape after S_pool: torch.Size([2, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([2, 256, 7, 7])
Shape after S_pool: torch.Size([2, 256, 1, 1])
Pool_out.shape: torch.Size([2, 2304, 1, 1])
Out ROIHead.shape: torch.Size([2, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
9it [00:14,  1.11it/s]Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([3, 2048, 7, 7])
Shape after S_pool: torch.Size([3, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([3, 256, 7, 7])
Shape after S_pool: torch.Size([3, 256, 1, 1])
Pool_out.shape: torch.Size([3, 2304, 1, 1])
Out ROIHead.shape: torch.Size([3, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
10it [00:15,  1.28it/s]Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([4, 2048, 7, 7])
Shape after S_pool: torch.Size([4, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([4, 256, 7, 7])
Shape after S_pool: torch.Size([4, 256, 1, 1])
Pool_out.shape: torch.Size([4, 2304, 1, 1])
Out ROIHead.shape: torch.Size([4, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
11it [00:15,  1.45it/s]Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([2, 400]) --- Bboxes shape: torch.Size([2, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
12it [00:16,  1.67it/s]Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
13it [00:16,  1.94it/s]Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([3, 400]) --- Bboxes shape: torch.Size([3, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([4, 400]) --- Bboxes shape: torch.Size([4, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
14it [00:17,  1.59it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
15it [00:17,  1.80it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
16it [00:18,  1.91it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
17it [00:18,  2.01it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
18it [00:19,  2.02it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
19it [00:19,  2.28it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
20it [00:19,  2.39it/s]21it [00:20,  2.39it/s]22it [00:20,  2.23it/s]23it [00:21,  2.30it/s]24it [00:21,  2.25it/s]25it [00:22,  2.30it/s]26it [00:22,  2.44it/s]27it [00:22,  2.48it/s]28it [00:23,  2.60it/s]29it [00:23,  2.51it/s]30it [00:23,  2.68it/s]Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
31it [00:24,  1.93it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
32it [00:25,  2.01it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
33it [00:25,  1.83it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
34it [00:26,  1.96it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
35it [00:26,  2.07it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
36it [00:27,  2.30it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
37it [00:27,  2.33it/s]38it [00:27,  2.35it/s]Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
39it [00:28,  2.29it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
40it [00:28,  2.17it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
41it [00:29,  2.06it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
42it [00:29,  2.12it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
43it [00:30,  2.33it/s]Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Pathway0.shape: torch.Size([1, 2048, 8, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 2048, 8, 15])
Shape after ROIAlign: torch.Size([1, 2048, 7, 7])
Shape after S_pool: torch.Size([1, 2048, 1, 1])
Pathway1.shape: torch.Size([1, 256, 32, 8, 15])
T_pool after squeeze dim 2: torch.Size([1, 256, 8, 15])
Shape after ROIAlign: torch.Size([1, 256, 7, 7])
Shape after S_pool: torch.Size([1, 256, 1, 1])
Pool_out.shape: torch.Size([1, 2304, 1, 1])
Out ROIHead.shape: torch.Size([1, 400])
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
Predict shape: torch.Size([1, 400]) --- Bboxes shape: torch.Size([1, 4]), 
^C43it [00:30,  1.41it/s]
Traceback (most recent call last):
  File "tools/run_net.py", line 44, in <module>
    main()
  File "tools/run_net.py", line 40, in main
    demo(cfg)
  File "/u01/manvd1/action-recognition/SlowFast/tools/demo_net.py", line 130, in demo
    for task in tqdm(run_demo(cfg, frame_provider)):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/tqdm/std.py", line 1178, in __iter__
    for obj in iterable:
  File "/u01/manvd1/action-recognition/SlowFast/tools/demo_net.py", line 81, in run_demo
    model.put(task)
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/predictor.py", line 142, in put
    task = self.predictor(task)
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/predictor.py", line 107, in __call__
    preds = preds.cpu()
KeyboardInterrupt
^CProcess _VisWorker-1:
Process _VisWorker-2:
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/popen_fork.py", line 28, in poll
    pid, sts = os.waitpid(self.pid, flag)
KeyboardInterrupt
Traceback (most recent call last):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/async_predictor.py", line 146, in run
    task = self.task_queue.get()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/queues.py", line 94, in get
    res = self._recv_bytes()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/connection.py", line 407, in _recv_bytes
    buf = self._recv(4)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/process.py", line 300, in _bootstrap
    util._exit_function()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/queues.py", line 192, in _finalize_join
    thread.join()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/threading.py", line 1044, in join
    self._wait_for_tstate_lock()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/threading.py", line 1060, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/async_predictor.py", line 150, in run
    frames = draw_predictions(task, self.video_vis)
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/async_predictor.py", line 311, in draw_predictions
    draw_range=draw_range,
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/video_visualizer.py", line 564, in draw_clip_range
    + list(right_frames)
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/video_visualizer.py", line 627, in draw_clip
    ground_truth=ground_truth,
  File "/u01/manvd1/action-recognition/SlowFast/slowfast/visualization/video_visualizer.py", line 513, in draw_one_frame
    return frame_visualizer.output.get_image()
  File "/u01/manvd1/action-recognition/SlowFast/detectron2_repo/detectron2/utils/visualizer.py", line 309, in get_image
    s, (width, height) = canvas.print_to_buffer()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py", line 514, in print_to_buffer
    FigureCanvasAgg.draw(self)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py", line 406, in draw
    self.figure.draw(self.renderer)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/artist.py", line 74, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/figure.py", line 2781, in draw
    renderer, self, artists, self.suppressComposite)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/_api/deprecation.py", line 431, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 2921, in draw
    mimage._draw_list_compositing_images(renderer, self, artists)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 641, in draw
    renderer, renderer.get_image_magnification())
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 927, in make_image
    magnification, unsampled=unsampled)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 552, in _make_image
    self, _rgb_to_rgba(A[..., :3]), out_shape, t, alpha=alpha)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/site-packages/matplotlib/image.py", line 190, in _resample
    out = np.zeros(out_shape + data.shape[2:], data.dtype)  # 2D->2D, 3D->3D.
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/process.py", line 300, in _bootstrap
    util._exit_function()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/multiprocessing/queues.py", line 192, in _finalize_join
    thread.join()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/threading.py", line 1044, in join
    self._wait_for_tstate_lock()
  File "/u01/khienpv1/VUHOANG/miniconda3/envs/action-recognition/lib/python3.7/threading.py", line 1060, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
^C